// Code generated by go-swagger; DO NOT EDIT.

package testflow

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewChangeTestflowGroupRequestParams creates a new ChangeTestflowGroupRequestParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewChangeTestflowGroupRequestParams() *ChangeTestflowGroupRequestParams {
	return &ChangeTestflowGroupRequestParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewChangeTestflowGroupRequestParamsWithTimeout creates a new ChangeTestflowGroupRequestParams object
// with the ability to set a timeout on a request.
func NewChangeTestflowGroupRequestParamsWithTimeout(timeout time.Duration) *ChangeTestflowGroupRequestParams {
	return &ChangeTestflowGroupRequestParams{
		timeout: timeout,
	}
}

// NewChangeTestflowGroupRequestParamsWithContext creates a new ChangeTestflowGroupRequestParams object
// with the ability to set a context for a request.
func NewChangeTestflowGroupRequestParamsWithContext(ctx context.Context) *ChangeTestflowGroupRequestParams {
	return &ChangeTestflowGroupRequestParams{
		Context: ctx,
	}
}

// NewChangeTestflowGroupRequestParamsWithHTTPClient creates a new ChangeTestflowGroupRequestParams object
// with the ability to set a custom HTTPClient for a request.
func NewChangeTestflowGroupRequestParamsWithHTTPClient(client *http.Client) *ChangeTestflowGroupRequestParams {
	return &ChangeTestflowGroupRequestParams{
		HTTPClient: client,
	}
}

/*
ChangeTestflowGroupRequestParams contains all the parameters to send to the API endpoint

	for the change testflow group request operation.

	Typically these are written to a http.Request.
*/
type ChangeTestflowGroupRequestParams struct {

	// GroupID.
	GroupID *string

	// TestflowIds.
	TestflowIDs []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the change testflow group request params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ChangeTestflowGroupRequestParams) WithDefaults() *ChangeTestflowGroupRequestParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the change testflow group request params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ChangeTestflowGroupRequestParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the change testflow group request params
func (o *ChangeTestflowGroupRequestParams) WithTimeout(timeout time.Duration) *ChangeTestflowGroupRequestParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the change testflow group request params
func (o *ChangeTestflowGroupRequestParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the change testflow group request params
func (o *ChangeTestflowGroupRequestParams) WithContext(ctx context.Context) *ChangeTestflowGroupRequestParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the change testflow group request params
func (o *ChangeTestflowGroupRequestParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the change testflow group request params
func (o *ChangeTestflowGroupRequestParams) WithHTTPClient(client *http.Client) *ChangeTestflowGroupRequestParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the change testflow group request params
func (o *ChangeTestflowGroupRequestParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGroupID adds the groupID to the change testflow group request params
func (o *ChangeTestflowGroupRequestParams) WithGroupID(groupID *string) *ChangeTestflowGroupRequestParams {
	o.SetGroupID(groupID)
	return o
}

// SetGroupID adds the groupId to the change testflow group request params
func (o *ChangeTestflowGroupRequestParams) SetGroupID(groupID *string) {
	o.GroupID = groupID
}

// WithTestflowIDs adds the testflowIds to the change testflow group request params
func (o *ChangeTestflowGroupRequestParams) WithTestflowIDs(testflowIds []string) *ChangeTestflowGroupRequestParams {
	o.SetTestflowIDs(testflowIds)
	return o
}

// SetTestflowIDs adds the testflowIds to the change testflow group request params
func (o *ChangeTestflowGroupRequestParams) SetTestflowIDs(testflowIds []string) {
	o.TestflowIDs = testflowIds
}

// WriteToRequest writes these params to a swagger request
func (o *ChangeTestflowGroupRequestParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.GroupID != nil {

		// query param groupId
		var qrGroupID string

		if o.GroupID != nil {
			qrGroupID = *o.GroupID
		}
		qGroupID := qrGroupID
		if qGroupID != "" {

			if err := r.SetQueryParam("groupId", qGroupID); err != nil {
				return err
			}
		}
	}

	if o.TestflowIDs != nil {

		// binding items for testflowIds
		joinedTestflowIds := o.bindParamTestflowIds(reg)

		// query array param testflowIds
		if err := r.SetQueryParam("testflowIds", joinedTestflowIds...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamChangeTestflowGroupRequest binds the parameter testflowIds
func (o *ChangeTestflowGroupRequestParams) bindParamTestflowIds(formats strfmt.Registry) []string {
	testflowIdsIR := o.TestflowIDs

	var testflowIdsIC []string
	for _, testflowIdsIIR := range testflowIdsIR { // explode []string

		testflowIdsIIV := testflowIdsIIR // string as string
		testflowIdsIC = append(testflowIdsIC, testflowIdsIIV)
	}

	// items.CollectionFormat: ""
	testflowIdsIS := swag.JoinByFormat(testflowIdsIC, "")

	return testflowIdsIS
}
