// Code generated by go-swagger; DO NOT EDIT.

package plugin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ipfs-force-community/brightbird/models"
)

// CountPluginsReqReader is a Reader for the CountPluginsReq structure.
type CountPluginsReqReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CountPluginsReqReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCountPluginsReqOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewCountPluginsReqInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /count-plugins] countPluginsReq", response, response.Code())
	}
}

// NewCountPluginsReqOK creates a CountPluginsReqOK with default headers values
func NewCountPluginsReqOK() *CountPluginsReqOK {
	return &CountPluginsReqOK{}
}

/*
CountPluginsReqOK describes a response with status code 200, with default header values.

	//todo fix correctstruct
*/
type CountPluginsReqOK struct {
	Payload models.MyString
}

// IsSuccess returns true when this count plugins req o k response has a 2xx status code
func (o *CountPluginsReqOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this count plugins req o k response has a 3xx status code
func (o *CountPluginsReqOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this count plugins req o k response has a 4xx status code
func (o *CountPluginsReqOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this count plugins req o k response has a 5xx status code
func (o *CountPluginsReqOK) IsServerError() bool {
	return false
}

// IsCode returns true when this count plugins req o k response a status code equal to that given
func (o *CountPluginsReqOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the count plugins req o k response
func (o *CountPluginsReqOK) Code() int {
	return 200
}

func (o *CountPluginsReqOK) Error() string {
	return fmt.Sprintf("[GET /count-plugins][%d] countPluginsReqOK  %+v", 200, o.Payload)
}

func (o *CountPluginsReqOK) String() string {
	return fmt.Sprintf("[GET /count-plugins][%d] countPluginsReqOK  %+v", 200, o.Payload)
}

func (o *CountPluginsReqOK) GetPayload() models.MyString {
	return o.Payload
}

func (o *CountPluginsReqOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCountPluginsReqInternalServerError creates a CountPluginsReqInternalServerError with default headers values
func NewCountPluginsReqInternalServerError() *CountPluginsReqInternalServerError {
	return &CountPluginsReqInternalServerError{}
}

/*
CountPluginsReqInternalServerError describes a response with status code 500, with default header values.

apiError
*/
type CountPluginsReqInternalServerError struct {
	Payload *models.APIError
}

// IsSuccess returns true when this count plugins req internal server error response has a 2xx status code
func (o *CountPluginsReqInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this count plugins req internal server error response has a 3xx status code
func (o *CountPluginsReqInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this count plugins req internal server error response has a 4xx status code
func (o *CountPluginsReqInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this count plugins req internal server error response has a 5xx status code
func (o *CountPluginsReqInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this count plugins req internal server error response a status code equal to that given
func (o *CountPluginsReqInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the count plugins req internal server error response
func (o *CountPluginsReqInternalServerError) Code() int {
	return 500
}

func (o *CountPluginsReqInternalServerError) Error() string {
	return fmt.Sprintf("[GET /count-plugins][%d] countPluginsReqInternalServerError  %+v", 500, o.Payload)
}

func (o *CountPluginsReqInternalServerError) String() string {
	return fmt.Sprintf("[GET /count-plugins][%d] countPluginsReqInternalServerError  %+v", 500, o.Payload)
}

func (o *CountPluginsReqInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *CountPluginsReqInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
