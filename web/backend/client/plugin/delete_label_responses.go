// Code generated by go-swagger; DO NOT EDIT.

package plugin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ipfs-force-community/brightbird/models"
)

// DeleteLabelReader is a Reader for the DeleteLabel structure.
type DeleteLabelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteLabelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteLabelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 503:
		result := NewDeleteLabelServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteLabelOK creates a DeleteLabelOK with default headers values
func NewDeleteLabelOK() *DeleteLabelOK {
	return &DeleteLabelOK{}
}

/*
DeleteLabelOK describes a response with status code 200, with default header values.

DeleteLabelOK delete label o k
*/
type DeleteLabelOK struct {
}

// IsSuccess returns true when this delete label o k response has a 2xx status code
func (o *DeleteLabelOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete label o k response has a 3xx status code
func (o *DeleteLabelOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete label o k response has a 4xx status code
func (o *DeleteLabelOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete label o k response has a 5xx status code
func (o *DeleteLabelOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete label o k response a status code equal to that given
func (o *DeleteLabelOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete label o k response
func (o *DeleteLabelOK) Code() int {
	return 200
}

func (o *DeleteLabelOK) Error() string {
	return fmt.Sprintf("[DELETE /plugin/label][%d] deleteLabelOK ", 200)
}

func (o *DeleteLabelOK) String() string {
	return fmt.Sprintf("[DELETE /plugin/label][%d] deleteLabelOK ", 200)
}

func (o *DeleteLabelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteLabelServiceUnavailable creates a DeleteLabelServiceUnavailable with default headers values
func NewDeleteLabelServiceUnavailable() *DeleteLabelServiceUnavailable {
	return &DeleteLabelServiceUnavailable{}
}

/*
DeleteLabelServiceUnavailable describes a response with status code 503, with default header values.

apiError
*/
type DeleteLabelServiceUnavailable struct {
	Payload *models.APIError
}

// IsSuccess returns true when this delete label service unavailable response has a 2xx status code
func (o *DeleteLabelServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete label service unavailable response has a 3xx status code
func (o *DeleteLabelServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete label service unavailable response has a 4xx status code
func (o *DeleteLabelServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete label service unavailable response has a 5xx status code
func (o *DeleteLabelServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this delete label service unavailable response a status code equal to that given
func (o *DeleteLabelServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the delete label service unavailable response
func (o *DeleteLabelServiceUnavailable) Code() int {
	return 503
}

func (o *DeleteLabelServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /plugin/label][%d] deleteLabelServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteLabelServiceUnavailable) String() string {
	return fmt.Sprintf("[DELETE /plugin/label][%d] deleteLabelServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteLabelServiceUnavailable) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteLabelServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
