apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: droplet-market-{{.UniqueId}}-deployment
spec:
  replicas: 1
  serviceName: droplet-market-{{.UniqueId}}-svc
  selector:
    matchLabels:
      app: droplet-market-{{.UniqueId}}-pod
  template:
    metadata:
      labels:
        app: droplet-market-{{.UniqueId}}-pod
    spec:
      initContainers:
        - name: init-myservice
          image: {{if gt (len .Registry) 0}}{{.Registry}}/{{end}}library/busybox:1.35
          command: ['sh', '-c', "[ -d \"/root/.droplet\" ]||(mkdir -p /root/.droplet && cp /root/config.tmp /root/.droplet/config.toml);"]
          volumeMounts:
            - mountPath: /root
              name: droplet-market-pvc
            - name: marketcfg
              mountPath: "/root/config.tmp"
              subPath: "config.toml"
            - mountPath: /shared-dir
              name: shared-dir-v
              subPath: {{.NameSpace}}
        - name: create-piece-dir
          image: busybox:1.28
          command: [ 'sh', '-c', "mkdir -p /root/piece-{{.UniqueId}}" ]
          volumeMounts:
            - mountPath: /shared-dir
              name: shared-dir-v
              subPath: {{.NameSpace}}
      containers:
        - name: droplet-market-{{.UniqueId}}
          image: "{{if gt (len .Registry) 0}}{{.Registry}}/{{end}}filvenus/droplet:{{.CodeVersion}}"
          args: ["run"]
          ports:
            - containerPort: 41235
              protocol: TCP
            - containerPort: 58418
              protocol: TCP
          volumeMounts:
            - mountPath: /root
              name: droplet-market-pvc
            - name: marketcfg
              mountPath: "/root/config.tmp"
              subPath: "config.toml"
            - mountPath: /shared-dir
              name: shared-dir-v
              subPath: {{.NameSpace}}
      volumes:
        - name: marketcfg
          configMap:
            name: droplet-market-cfg-{{.UniqueId}}
            items:
              - key: config.toml
                path: config.toml
        - name: shared-dir-v
          persistentVolumeClaim:
            claimName: shared-dir
  volumeClaimTemplates:
    - metadata:
        name: droplet-market-pvc # name+podname
        labels:
          app: droplet-market-{{.UniqueId}}-pvc
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "nfs-client"
        resources:
          requests:
            storage: 1Gi